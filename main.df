if len(__args__) < 2 {
    panic("Path to the bf code file is needed!")
}

key = __args__ >> 
key = key[0]


# read file using v
code = v {
        import os
        return(os.read_file("%i{key}")!)
} endv

memory = []
pointer = 0
code_ptr = 0
loop_stack = []

x = 0

# create memory block
for x < 3000 {
    memory << 0
    x = x + 1
}

# Brainfuck interpreter
for code_ptr < len(code) {
    command = code[code_ptr]
    
    if command == ">" {
        pointer = pointer + 1
    }else if command == "<" {
        pointer = pointer - 1
    }else if command == "+" {
        memory[pointer] = (memory[pointer] + 1) % 256
    }else if command == "-" {
        memory[pointer] = (memory[pointer] - 1) % 256
    }else if command == "." {
        print(chr(memory[pointer]))
    }else if command == ","{
        got_input = input("")
        memory[pointer] = chr(got_input[0])
    }else if command == '[' {
        if memory[pointer] == 0 {
            open_brackets = 1
            for open_brackets {
                code_ptr = code_ptr + 1

                if code[code_ptr] == '[' {
                    open_brackets = open_brackets + 1
                } else if code[code_ptr] == ']' {
                    open_brackets = open_brackets - 1
                }
            }
        } else {
            loop_stack << code_ptr 
        }
    } else if command == ']' {
        if memory[pointer] != 0 {
            code_ptr = loop_stack[len(loop_stack) - 1]
        } else {
            loop_stack >>
        }
    }

    code_ptr = code_ptr + 1
}